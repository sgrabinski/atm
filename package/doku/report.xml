<?xml version='1.0' encoding='UTF-8'?>
<ResultsSession buildId="2023-01-17" climode="true" execEnv="win32_x86_64" hasViols="true" id="1673593182120" lang="en_US" machine="STINGER" prjModule="Git 3" project="" tag="${scontrol_branch}-win32_x86_64" time="2023-01-17T11:28:38+01:00" toolDispName="C/C++test" toolId="c++test" toolName="DTP Engine for C/C++" toolVer="2021.2.1" user="sgrabinski">
   <TestConfig machine="STINGER" name="Recommended Rules" pseudoUrl="builtin://Recommended Rules" user="sgrabinski" />
   <Authors>
      <Author id="dev1" name="sgrabinski" />
   </Authors>
   <Analyzers>
      <Analyzer id="com.parasoft.xtest.scope.analyzer" name="Scope Analyzer" ver="10.5.2.20211215" />
      <Analyzer id="com.parasoft.xtest.cpp.analyzer.static.code" name="Parasoft C/C++ Code Analyzer" ver="10.5.2.20211216B1470" />
      <Analyzer id="com.parasoft.xtest.dupcode.parser" name="Code Duplication Parser" ver="10.5.2.20211215" />
      <Analyzer id="com.parasoft.xtest.cpp.analyzer.static.pattern" name="Parasoft C/C++ Static Analyzer" ver="10.5.2.20211216B1470" />
      <Analyzer id="com.parasoft.xtest.cpp.analyzer.static.flow" name="Parasoft C/C++ Flow Analyzer" ver="10.5.2.20211014B3008" />
      <Analyzer id="com.parasoft.xtest.cpp.analyzer.static.metrics" name="Parasoft C/C++ Metrics Analyzer" ver="10.5.2.20211216B1470" />
      <Analyzer id="com.parasoft.xtest.cpp.analyzer.static.dupcode" name="Code Duplication Detector" ver="10.5.2.20211215" />
      <Analyzer id="com.parasoft.xtest.cpp.analyzer.static.global" name="Parasoft C/C++ Global Static Analyzer" ver="10.5.2.20211216B1470" />
   </Analyzers>
   <VersionInfos>
      <StorageInfo ownerId="" resultId="ISetupResult" ver="1" ver10x="1" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IMetricsViolation" ver="2" ver10x="1" />
      <StorageInfo ownerId="" resultId="IExecutionViolation" ver="1" ver10x="1" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IDupCodeViolation" ver="2" ver10x="1" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IFlowAnalysisViolation" ver="2" ver10x="1" />
      <StorageInfo ownerId="" resultId="IFunctionalViolation" ver="1" ver10x="1" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="ICodingStandardsViolation" ver="2" ver10x="1" />
      <StorageInfo ownerId="" resultId="IUnitTestViolation" ver="1" ver10x="1" />
   </VersionInfos>
   <Goals tsks="7">
      
   </Goals>
   <Metrics>
      <Metric avg="1.333" disp="true" id="METRIC.CC" max="5" min="1" name="McCabe Cyclomatic Complexity" noi="24" stddev="0.898">
         <Info avg="1.333" disp="true" elem="Git 3" max="5" min="1" noi="24" stddev="0.898" />
      </Metric>
      <Metric avg="0.167" disp="true" id="METRIC.NBD" max="1" min="0" name="Nested Blocks Depth" noi="24" stddev="0.373">
         <Info avg="0.167" disp="true" elem="Git 3" max="1" min="0" noi="24" stddev="0.373" />
      </Metric>
      <Metric avg="31.778" disp="true" id="METRIC.NOPLIF" max="55" min="14" name="Physical Lines in Files" noi="9" stddev="14.497">
         <Info avg="31.778" disp="true" elem="Git 3" max="55" min="14" noi="9" stddev="14.497" />
      </Metric>
      <Metric avg="6.375" disp="true" id="METRIC.NOSLIM" max="16" min="1" name="Source Lines in Methods" noi="24" stddev="3.638">
         <Info avg="6.375" disp="true" elem="Git 3" max="16" min="1" noi="24" stddev="3.638" />
      </Metric>
   </Metrics>
   <Scope>
      <Repositories />
      <Locations>
         <Loc auth="sgrabinski" hash="-1636172050" locRef="1" projId="Git 3" projPath="/Git 3" project="Git 3" resProjPath="Account.cxx" totLns="14" uri="file://STINGER/c:/Program%20Files%20(x86)/Jenkins/workspace/Git%203/Account.cxx" />
         <Loc auth="sgrabinski" hash="-318977119" locRef="2" projId="Git 3" projPath="/Git 3" project="Git 3" resProjPath="ATM.cxx" totLns="52" uri="file://STINGER/c:/Program%20Files%20(x86)/Jenkins/workspace/Git%203/ATM.cxx" />
         <Loc auth="sgrabinski" hash="-1422048276" locRef="3" projId="Git 3" projPath="/Git 3" project="Git 3" resProjPath="Bank.cxx" totLns="40" uri="file://STINGER/c:/Program%20Files%20(x86)/Jenkins/workspace/Git%203/Bank.cxx" />
         <Loc auth="sgrabinski" hash="-1798372520" locRef="4" projId="Git 3" projPath="/Git 3" project="Git 3" resProjPath="BaseDisplay.cxx" totLns="18" uri="file://STINGER/c:/Program%20Files%20(x86)/Jenkins/workspace/Git%203/BaseDisplay.cxx" />
         <Loc auth="sgrabinski" hash="-1340482798" locRef="5" projId="Git 3" projPath="/Git 3" project="Git 3" resProjPath="Main.cxx" totLns="27" uri="file://STINGER/c:/Program%20Files%20(x86)/Jenkins/workspace/Git%203/Main.cxx" />
         <Loc auth="sgrabinski" hash="-2070703729" locRef="6" projId="Git 3" projPath="/Git 3" project="Git 3" resProjPath="include/BaseDisplay.hxx" totLns="16" uri="file://STINGER/c:/Program%20Files%20(x86)/Jenkins/workspace/Git%203/include/BaseDisplay.hxx" />
         <Loc auth="sgrabinski" hash="785146300" locRef="7" projId="Git 3" projPath="/Git 3" project="Git 3" resProjPath="include/ATM.hxx" totLns="39" uri="file://STINGER/c:/Program%20Files%20(x86)/Jenkins/workspace/Git%203/include/ATM.hxx" />
         <Loc auth="sgrabinski" hash="2036829073" locRef="8" projId="Git 3" projPath="/Git 3" project="Git 3" resProjPath="include/Account.hxx" totLns="55" uri="file://STINGER/c:/Program%20Files%20(x86)/Jenkins/workspace/Git%203/include/Account.hxx" />
         <Loc auth="sgrabinski" hash="-118678391" locRef="9" projId="Git 3" projPath="/Git 3" project="Git 3" resProjPath="include/Bank.hxx" totLns="25" uri="file://STINGER/c:/Program%20Files%20(x86)/Jenkins/workspace/Git%203/include/Bank.hxx" />
      </Locations>
   </Scope>
   
  <SetupProblems />

   <CodingStandards ownerId="com.parasoft.xtest.checkers.api.standards" time="0:00:02">
      <Projects>
         <Project bdCheckedFiles="0" bdTotalFiles="0" checkedFiles="9" checkedLns="286" id="Git 3" name="Git 3" qfixErrs="0" suppErrs="0" totErrs="7" totFiles="9" totLns="286" />
      </Projects>
      
      
      <Rules>
         <CategoriesList>
            <Category authTot="0;" authUrg="0;" desc="Flow Analysis" name="BD" rules="118" total="0">
               <Category authTot="0;" authUrg="0;" desc="Incorrect API usage" name="BD-API" rules="6" total="0" />
               <Category authTot="0;" authUrg="0;" desc="Possible Bugs" name="BD-PB" rules="65" total="0" />
               <Category authTot="0;" authUrg="0;" desc="Resources" name="BD-RES" rules="8" total="0" />
               <Category authTot="0;" authUrg="0;" desc="Threads &amp; Synchronization" name="BD-TRS" rules="15" total="0" />
            </Category>
            <Category authTot="0;" authUrg="0;" desc="Code Duplication Detection" name="CDD" rules="4" total="0" />
            <Category authTot="0;" authUrg="0;" desc="Coding Conventions" name="CODSTA" rules="437" total="0">
               <Category authTot="1;" authUrg="1;" desc="Coding Conventions for C++" name="CODSTA-CPP" rules="111" total="1" />
            </Category>
            <Category authTot="0;" authUrg="0;" desc="Exceptions" name="EXCEPT" rules="26" total="0" />
            <Category authTot="1;" authUrg="1;" desc="Initialization" name="INIT" rules="20" total="1" />
            <Category authTot="0;" authUrg="0;" desc="Metric" name="METRIC" rules="50" total="0" />
            <Category authTot="0;" authUrg="0;" desc="MISRA C 2004" name="MISRA2004" rules="220" total="0" />
            <Category authTot="0;" authUrg="0;" desc="Memory and Resource Management" name="MRM" rules="60" total="0" />
            <Category authTot="1;" authUrg="1;" desc="Object Oriented" name="OOP" rules="60" total="1" />
            <Category authTot="4;" authUrg="4;" desc="Optimization" name="OPT" rules="43" total="4" />
            <Category authTot="0;" authUrg="0;" desc="Possible Bugs" name="PB" rules="86" total="0" />
         </CategoriesList>
         <RulesList>
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-API" desc="Do not pass negative values to functions expecting non-negative arguments" id="BD-API-NEGPARAM" sev="1" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Always catch exceptions" id="BD-PB-EXCEPT" sev="1" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid use before initialization" id="BD-PB-NOTINIT" sev="1" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid null pointer dereferencing" id="BD-PB-NP" sev="1" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid buffer overflow due to defining incorrect format limits" id="BD-PB-OVERFFMT" sev="1" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid overflow due to reading a not zero terminated string" id="BD-PB-OVERFNZT" sev="1" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid overflow when reading from a buffer" id="BD-PB-OVERFRD" sev="1" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid overflow when writing to a buffer" id="BD-PB-OVERFWR" sev="1" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid division by zero" id="BD-PB-ZERO" sev="1" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid accessing arrays out of bounds" id="BD-PB-ARRAY" sev="2" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Avoid conditions that always evaluate to the same value" id="BD-PB-CC" sev="2" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Do not check for null after dereferencing" id="BD-PB-DEREF" sev="2" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Suspicious setting of stream flags" id="BD-PB-STREAMFLAGS" sev="3" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-PB" desc="Restore stream format" id="BD-PB-STREAMFMT" sev="3" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-RES" desc="Properly deallocate dynamically allocated resources" id="BD-RES-BADDEALLOC" sev="1" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-RES" desc="Do not use resources that have been freed" id="BD-RES-FREE" sev="1" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-RES" desc="Do not free resources using invalid pointers" id="BD-RES-INVFREE" sev="1" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-RES" desc="Ensure resources are freed" id="BD-RES-LEAKS" sev="1" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="Avoid double locking" id="BD-TRS-DLOCK" sev="1" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="Avoid race conditions when using fork and file descriptors" id="BD-TRS-FORKFILE" sev="1" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="Do not abandon unreleased locks" id="BD-TRS-LOCK" sev="1" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="Do not acquire locks in different order" id="BD-TRS-ORDER" sev="1" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="Avoid race conditions while checking for the existence of a symbolic link" id="BD-TRS-SYMLINK" sev="1" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.flow" authTot="0;" authUrg="0;" cat="BD-TRS" desc="Do not use blocking functions while holding a lock" id="BD-TRS-TSHL" sev="1" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.dupcode" authTot="0;" authUrg="0;" cat="CDD" desc="Avoid function duplication" id="CDD-DUPM" sev="2" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="CODSTA" desc="Local variables should not use the same names as member variables" id="CODSTA-44" sev="1" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="CODSTA" desc="Pointer should not be compared with NULL using relational operators &lt;, >, >=, &lt;=" id="CODSTA-147" sev="3" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="CODSTA" desc="Do not use string literals as operands of equality or relational operators" id="CODSTA-148" sev="3" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="CODSTA" desc="Avoid infinite loops" id="CODSTA-82" sev="3" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="1;" authUrg="1;" cat="CODSTA-CPP" desc="Constructors allowing for conversion should be made explicit" id="CODSTA-CPP-04" sev="1" total="1" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Throw by value, catch by reference" id="EXCEPT-02" sev="1" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="EXCEPT" desc="Do not throw from within destructor" id="EXCEPT-03" sev="1" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="1;" authUrg="1;" cat="INIT" desc="All member variables should be initialized in constructor" id="INIT-06" sev="1" total="1" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.metrics" authTot="0;" authUrg="0;" cat="METRIC" desc="McCabe Cyclomatic Complexity" id="METRIC.CC" sev="3" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.metrics" authTot="0;" authUrg="0;" cat="METRIC" desc="Nested Blocks Depth" id="METRIC.NBD" sev="3" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="Floating-point expressions shall not be tested for equality or inequality" id="MISRA2004-13_3" sev="3" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="All exit paths from a function with non-void return type shall have an explicit return statement with an expression" id="MISRA2004-16_8" sev="3" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MISRA2004" desc="The address of an object with automatic storage shall not be returned from a function" id="MISRA2004-17_6_a" sev="3" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MRM" desc="Do not invoke malloc/realloc for objects having constructors" id="MRM-08" sev="1" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MRM" desc="Declare a copy assignment operator for classes with dynamically allocated memory" id="MRM-37" sev="1" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MRM" desc="Declare a copy constructor for classes with dynamically allocated memory" id="MRM-38" sev="1" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MRM" desc="Never provide brackets ([]) for delete when deallocating non-arrays" id="MRM-35" sev="3" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MRM" desc="Always provide empty brackets ([]) for delete when deallocating arrays" id="MRM-36" sev="3" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="MRM" desc="Do not use 'delete' on pointers to a void type" id="MRM-51" sev="3" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="OOP" desc="Class cannot inherit other class more than once unless it is virtual inheritance" id="OOP-03" sev="1" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="OOP" desc="Avoid calling virtual functions from constructors" id="OOP-16" sev="1" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="1;" authUrg="1;" cat="OOP" desc="If a class has virtual functions it shall have a virtual destructor" id="OOP-23" sev="2" total="1" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="4;" authUrg="4;" cat="OPT" desc="Pass objects by reference instead of by value" id="OPT-14" sev="3" total="4" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="PB" desc="Do not call delete on non-pointers" id="PB-13" sev="1" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="PB" desc="Properly terminate character strings" id="PB-21" sev="1" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="PB" desc="Do not cast from or to incomplete class at the point of casting" id="PB-54" sev="2" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="PB" desc="Do not delete objects with incomplete class at the point of deletion" id="PB-55" sev="2" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="PB" desc="Boolean condition always evaluates to the same value due to enumeration with only zero or only non-zero constants" id="PB-68" sev="2" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="PB" desc="Suspicious argument to malloc" id="PB-60" sev="3" total="0" />
            <Rule analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" authTot="0;" authUrg="0;" cat="PB" desc="Pointer arithmetic performed on freshly allocated memory" id="PB-61" sev="3" total="0" />
         </RulesList>
         <SeverityList>
            <Severity authTot="2;" authUrg="2;" id="1" total="2" />
            <Severity authTot="1;" authUrg="1;" id="2" total="1" />
            <Severity authTot="4;" authUrg="4;" id="3" total="4" />
         </SeverityList>
      </Rules>
      
  <Supps />

      
  <StdViols>
    <StdViol msg="Constructor does not initialize members: 'myCurrentAccount'" ln="4" locFile="/Git 3/ATM.cxx" locStartln="4" sev="1" auth="sgrabinski" locRef="2" rule="INIT-06" lnHash="-1547882108" rule.header="All member variables should be initialized in constructor" tool="c++test" lineHash="-1547882108" unbViolId="f7a7781e-584c-3876-a8e5-fe1a410d7290" locStartPos="5" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="943d66fe-ef81-3646-994a-34713dd5c531" locEndPos="6" locType="sr" urgent="true" hash="-318977119" locEndLn="4" goals="1," />
    <StdViol msg="The parameter 'password' of function 'viewAccount' is passed by value" ln="10" locFile="/Git 3/ATM.cxx" locStartln="10" sev="3" auth="sgrabinski" locRef="2" rule="OPT-14" lnHash="-2065354134" rule.header="Pass objects by reference instead of by value" tool="c++test" lineHash="-2065354134" unbViolId="bf5d799b-0491-3bf8-93d7-d660367ba0e1" locStartPos="48" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="14ee8e3c-bb7c-38ac-878e-4ea7114f000e" locEndPos="49" locType="sr" urgent="true" hash="-318977119" locEndLn="10" goals="1," />
    <StdViol msg="The parameter 'password' of function 'getAccount' is passed by value" ln="15" locFile="/Git 3/Bank.cxx" locStartln="15" sev="3" auth="sgrabinski" locRef="3" rule="OPT-14" lnHash="22837910" rule.header="Pass objects by reference instead of by value" tool="c++test" lineHash="22837910" unbViolId="79669100-6783-30bc-a651-df33ae8f1554" locStartPos="42" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="dcc6e576-29d2-380a-930b-5e9d64d32023" locEndPos="43" locType="sr" urgent="true" hash="-1422048276" locEndLn="15" goals="1," />
    <StdViol msg="Class 'BaseDisplay' has virtual functions without a virtual destructor" ln="4" locFile="/Git 3/include/BaseDisplay.hxx" locStartln="4" sev="2" auth="sgrabinski" locRef="6" rule="OOP-23" lnHash="1229723113" rule.header="If a class has virtual functions it shall have a virtual destructor" tool="c++test" lineHash="1229723113" unbViolId="1203d231-9e31-35cd-8736-53ec1c9588b9" locStartPos="6" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="98ef0c77-71c8-33bb-ab4c-c2d988b5ee32" locEndPos="7" locType="sr" urgent="true" hash="-2070703729" locEndLn="4" goals="1," />
    <StdViol msg="The parameter 'password' of function 'viewAccount' is passed by value" ln="24" locFile="/Git 3/include/ATM.hxx" locStartln="24" sev="3" auth="sgrabinski" locRef="7" rule="OPT-14" lnHash="578896495" rule.header="Pass objects by reference instead of by value" tool="c++test" lineHash="578896495" unbViolId="2165b434-04dd-32a8-824b-2f7bc743c71d" locStartPos="51" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="bb34b39d-7e38-398e-9b02-2f75c6bb072d" locEndPos="52" locType="sr" urgent="true" hash="785146300" locEndLn="24" goals="1," />
    <StdViol msg="Constructor 'Account' allowing conversion should be made explicit" ln="16" locFile="/Git 3/include/Account.hxx" locStartln="16" sev="1" auth="sgrabinski" locRef="8" rule="CODSTA-CPP-04" lnHash="-1793674311" rule.header="Constructors allowing for conversion should be made explicit" tool="c++test" lineHash="-1793674311" unbViolId="1ad5eeb3-3173-3177-a285-626c44d864f8" locStartPos="8" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="4a5d8ea0-d407-3efe-90af-894aad468566" locEndPos="9" locType="sr" urgent="true" hash="2036829073" locEndLn="16" goals="1," />
    <StdViol msg="The parameter 'password' of function 'getAccount' is passed by value" ln="16" locFile="/Git 3/include/Bank.hxx" locStartln="16" sev="3" auth="sgrabinski" locRef="9" rule="OPT-14" lnHash="1696869185" rule.header="Pass objects by reference instead of by value" tool="c++test" lineHash="1696869185" unbViolId="ea0007b1-3e12-33de-bdc9-80cbd4183a4a" locStartPos="44" analyzer="com.parasoft.xtest.cpp.analyzer.static.pattern" lang="cpp" violId="dd1f0f69-e531-3273-bb1b-f8e2d70b4b94" locEndPos="45" locType="sr" urgent="true" hash="-118678391" locEndLn="16" goals="1," />
  </StdViols>

      <TestedFilesDetails>
         <Total name="Total (Suppressed)" supp="0" total="7">
            <Project id="Git 3" name="Git 3" supp="0" total="7">
               <Res loc="/Git 3/Account.cxx" locRef="1" locType="sr" name="Account.cxx" supp="0" total="0" />
               <Res loc="/Git 3/ATM.cxx" locRef="2" locType="sr" name="ATM.cxx" supp="0" total="2" />
               <Res loc="/Git 3/Bank.cxx" locRef="3" locType="sr" name="Bank.cxx" supp="0" total="1" />
               <Res loc="/Git 3/BaseDisplay.cxx" locRef="4" locType="sr" name="BaseDisplay.cxx" supp="0" total="0" />
               <Res loc="/Git 3/Main.cxx" locRef="5" locType="sr" name="Main.cxx" supp="0" total="0" />
               <Res name="include" supp="0" total="4">
                  <Res loc="/Git 3/include/BaseDisplay.hxx" locRef="6" locType="sr" name="BaseDisplay.hxx" supp="0" total="1" />
                  <Res loc="/Git 3/include/ATM.hxx" locRef="7" locType="sr" name="ATM.hxx" supp="0" total="1" />
                  <Res loc="/Git 3/include/Account.hxx" locRef="8" locType="sr" name="Account.hxx" supp="0" total="1" />
                  <Res loc="/Git 3/include/Bank.hxx" locRef="9" locType="sr" name="Bank.hxx" supp="0" total="1" />
               </Res>
            </Project>
         </Total>
      </TestedFilesDetails>
   </CodingStandards>
   <Statistics>
      
   </Statistics>
</ResultsSession>
